{"ast":null,"code":"import { TransactionDetailComponent } from './transaction-detail/transaction-detail.component';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./transactions.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/datepicker\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction TransactionListComponent_ng_template_14_table_0_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function TransactionListComponent_ng_template_14_table_0_tr_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const transaction_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r7.openDialog(transaction_r6));\n    });\n    i0.ɵɵtext(9, \"View\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const transaction_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r6.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r5.convertDate(transaction_r6.date));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(transaction_r6.Comments);\n  }\n}\n\nfunction TransactionListComponent_ng_template_14_table_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"th\");\n    i0.ɵɵtext(3, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Comments\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Action\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵtemplate(11, TransactionListComponent_ng_template_14_table_0_tr_11_Template, 10, 3, \"tr\", 10);\n    i0.ɵɵpipe(12, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 1, ctx_r4.transactionList$));\n  }\n}\n\nfunction TransactionListComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TransactionListComponent_ng_template_14_table_0_Template, 13, 3, \"table\", 9);\n    i0.ɵɵpipe(1, \"async\");\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(16);\n\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx_r1.transactionList$).length > 0)(\"ngIfElse\", _r2);\n  }\n}\n\nfunction TransactionListComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" No Transactions Found! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class TransactionListComponent {\n  constructor(transactionData, dialog) {\n    this.transactionData = transactionData;\n    this.dialog = dialog;\n    this.startDate = \"1970-01-01\";\n    this.endDate = this.convertDate2(new Date());\n  }\n\n  ngOnInit() {\n    this.getTransactionList();\n  }\n\n  getTransactionList() {\n    this.transactionList$ = this.transactionData.getTransactions(this.startDate, this.endDate).pipe(map(res => {\n      let array = [];\n\n      if (Array.isArray(res)) {\n        array = res.filter(res => res.status !== 'PENDING');\n      }\n    }));\n  }\n\n  convertDate(milliseconds) {\n    let date = new Date(milliseconds);\n    let dd = String(date.getDate()).padStart(2, '0');\n    let mm = String(date.getMonth() + 1).padStart(2, '0');\n    let yyyy = date.getFullYear();\n    let dateFormated = dd + '/' + mm + '/' + yyyy;\n    return dateFormated;\n  }\n\n  convertDate2(date) {\n    return date.toISOString().split('T')[0];\n  }\n\n  dateChanged($event, isStartDate) {\n    if (isStartDate) {\n      this.startDate = this.convertDate2($event.target.value);\n    } else {\n      this.endDate = this.convertDate2($event.target.value);\n    }\n  }\n\n  openDialog(transaction) {\n    const dialogRef = this.dialog.open(TransactionDetailComponent, {\n      width: '600px',\n      data: transaction\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('closed', result);\n    });\n  }\n\n}\n\nTransactionListComponent.ɵfac = function TransactionListComponent_Factory(t) {\n  return new (t || TransactionListComponent)(i0.ɵɵdirectiveInject(i1.TransactionsService), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\n\nTransactionListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransactionListComponent,\n  selectors: [[\"app-transaction-list\"]],\n  decls: 17,\n  vars: 2,\n  consts: [[\"appearance\", \"fill\"], [3, \"rangePicker\"], [\"matStartDate\", \"\", \"placeholder\", \"Start date\", 3, \"dateChange\"], [\"matEndDate\", \"\", \"placeholder\", \"End date\", 3, \"dateChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"ngIf\", \"as transactions\"], [\"elseBlock\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function TransactionListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 0)(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Enter a date range\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-date-range-input\", 1)(5, \"input\", 2);\n      i0.ɵɵlistener(\"dateChange\", function TransactionListComponent_Template_input_dateChange_5_listener($event) {\n        return ctx.dateChanged($event, true);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 3);\n      i0.ɵɵlistener(\"dateChange\", function TransactionListComponent_Template_input_dateChange_6_listener($event) {\n        return ctx.dateChanged($event, false);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"mat-hint\");\n      i0.ɵɵtext(8, \"MM/DD/YYYY \\u2013 MM/DD/YYYY\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"mat-datepicker-toggle\", 4)(10, \"mat-date-range-picker\", null, 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function TransactionListComponent_Template_button_click_12_listener() {\n        return ctx.getTransactionList();\n      });\n      i0.ɵɵtext(13, \"GO!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, TransactionListComponent_ng_template_14_Template, 2, 4, \"ng-template\", 7);\n      i0.ɵɵtemplate(15, TransactionListComponent_ng_template_15_Template, 2, 0, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(11);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"rangePicker\", _r0);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"for\", _r0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.MatDatepickerToggle, i4.MatDateRangeInput, i4.MatStartDate, i4.MatEndDate, i4.MatDateRangePicker, i5.MatFormField, i5.MatHint, i5.MatLabel, i5.MatSuffix, i6.MatButton, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0cmFuc2FjdGlvbi1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["TransactionDetailComponent","map","i0","_r2","TransactionListComponent","constructor","transactionData","dialog","convertDate2","Date","ngOnInit","getTransactionList","transactionList$","getTransactions","startDate","endDate","pipe","res","array","Array","isArray","filter","status","convertDate","milliseconds","date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","dateFormated","toISOString","split","dateChanged","$event","isStartDate","target","value","openDialog","transaction","dialogRef","open","width","data","afterClosed","subscribe","result","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Sikandar\\Desktop\\Code\\CIBC-frontend\\src\\app\\transaction-list\\transaction-list.component.ts","C:\\Users\\Sikandar\\Desktop\\Code\\CIBC-frontend\\src\\app\\transaction-list\\transaction-list.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { TransactionsService } from './transactions.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TransactionDetailComponent } from './transaction-detail/transaction-detail.component';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-transaction-list',\n  templateUrl: './transaction-list.component.html',\n  styleUrls: ['./transaction-list.component.scss']\n})\nexport class TransactionListComponent implements OnInit {\n  constructor(\n    private transactionData: TransactionsService,\n    public dialog: MatDialog\n  ) { }\n\n  //transactionList: any = [];\n  transactionList$: Observable<any> | undefined;\n  startDate: any = \"1970-01-01\";\n  endDate: any = this.convertDate2(new Date());\n\n  ngOnInit(): void {\n    this.getTransactionList();\n  }\n\n  getTransactionList() {\n    this.transactionList$ = this.transactionData.getTransactions(this.startDate, this.endDate).pipe(\n      map((res) => {\n        let array = []\n        if (Array.isArray(res)) {\n          array = res.filter(res => res.status !== 'PENDING');\n        }\n      })\n    );\n  }\n\n  convertDate(milliseconds: any) {\n    let date = new Date(milliseconds)\n    let dd = String(date.getDate()).padStart(2, '0');\n    let mm = String(date.getMonth() + 1).padStart(2, '0');\n    let yyyy = date.getFullYear();\n\n    let dateFormated = dd + '/' + mm + '/' + yyyy;\n    return dateFormated;\n  }\n\n  convertDate2(date: any) {\n    return date.toISOString().split('T')[0];\n  }\n\n  dateChanged($event: any, isStartDate: Boolean) {\n    if (isStartDate) {\n      this.startDate = this.convertDate2($event.target.value);\n    } else {\n      this.endDate = this.convertDate2($event.target.value);\n    }\n  }\n\n  openDialog(transaction: any): void {\n    const dialogRef = this.dialog.open(TransactionDetailComponent, {\n      width: '600px',\n      data: transaction\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('closed', result)\n    });\n  }\n\n}\n","<div>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Enter a date range</mat-label>\n        <mat-date-range-input [rangePicker]=\"picker\">\n            <input matStartDate placeholder=\"Start date\" (dateChange)=\"dateChanged($event, true)\">\n            <input matEndDate   placeholder=\"End date\"   (dateChange)=\"dateChanged($event, false)\">\n        </mat-date-range-input>\n        <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker></mat-date-range-picker>\n    </mat-form-field>\n\n    <button mat-raised-button color=\"primary\" (click)=\"getTransactionList()\">GO!</button>\n    <ng-template ngIf=\"as transactions\">\n        <table *ngIf=\"(transactionList$ | async).length > 0; else elseBlock\">\n            <thead>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Comments</th>\n                <th>Action</th>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let transaction of (transactionList$ | async)\">\n                    <td>{{transaction.id}}</td>\n                    <td>{{convertDate(transaction.date)}}</td>\n                    <td>{{transaction.Comments}}</td>\n                    <td><button (click)=\"openDialog(transaction)\">View</button></td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-template>\n    \n\n    <ng-template #elseBlock>\n        <div>\n            No Transactions Found!\n        </div>\n    </ng-template>\n</div>\n\n"]},"metadata":{},"sourceType":"module"}